plugins {
    id 'java-library'
    id 'eclipse'
    id 'idea'
    id 'net.neoforged.gradle.userdev' version '7.0.145'
}

version = mod_version
group = mod_group_id

repositories {
}

base {
    archivesName = mod_id
}

java.toolchain.languageVersion = JavaLanguageVersion.of(21)

sourceSets.main.resources { srcDir 'src/generated/resources' }

dependencies {
    implementation "net.neoforged:neoforge:${neo_version}"
}

tasks.withType(ProcessResources).configureEach {
    var replaceProperties = [
            minecraft_version      : minecraft_version,
            minecraft_version_range: minecraft_version_range,
            neo_version            : neo_version,
            neo_version_range      : neo_version_range,
            loader_version_range   : loader_version_range,
            mod_id                 : mod_id,
            mod_name               : mod_name,
            mod_license            : mod_license,
            mod_version            : mod_version,
            mod_authors            : mod_authors,
            mod_description        : mod_description
    ]
    inputs.properties replaceProperties

    filesMatching(['META-INF/neoforge.mods.toml']) {
        expand replaceProperties
    }
}
processResources {
    from 'LICENSE.txt'
}

jar.doLast {
    if (System.getenv('SIGNJAR_KEYSTORE') != null) {
        def keystore = File.createTempFile('keystore-', '.jks', getTemporaryDir()).toString()

        file(keystore).withOutputStream { output ->
            output.write(Base64.getDecoder().decode(System.getenv('SIGNJAR_KEYSTORE')))
        }
        ant.signjar(
                jar: archiveFile.get(),
                signedJar: archiveFile.get(),
                keystore: keystore,
                alias: System.getenv('SIGNJAR_ALIAS'),
                storepass: System.getenv('SIGNJAR_STOREPASS'),
                keypass: System.getenv('SIGNJAR_KEYPASS'),
                preservelastmodified: "true"
        )

        delete keystore
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}
